// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.14.0
// source: business.entity.proto

package vgoapis

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NameKh       string                 `protobuf:"bytes,2,opt,name=nameKh,proto3" json:"nameKh,omitempty"`
	NameEn       string                 `protobuf:"bytes,3,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	NameXx       string                 `protobuf:"bytes,4,opt,name=nameXx,proto3" json:"nameXx,omitempty"`
	DscrtKh      string                 `protobuf:"bytes,5,opt,name=dscrtKh,proto3" json:"dscrtKh,omitempty"`
	DscrtEn      string                 `protobuf:"bytes,6,opt,name=dscrtEn,proto3" json:"dscrtEn,omitempty"`
	DscrtXx      string                 `protobuf:"bytes,7,opt,name=dscrtXx,proto3" json:"dscrtXx,omitempty"`
	OpeningDate  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=openingDate,proto3" json:"openingDate,omitempty"`
	Images       []*Image               `protobuf:"bytes,9,rep,name=images,proto3" json:"images,omitempty"`
	Categories   []string               `protobuf:"bytes,10,rep,name=categories,proto3" json:"categories,omitempty"`
	Tags         []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	OpeningHours []*OpeningHour         `protobuf:"bytes,12,rep,name=openingHours,proto3" json:"openingHours,omitempty"`
	OwnerIds     []string               `protobuf:"bytes,13,rep,name=ownerIds,proto3" json:"ownerIds,omitempty"`
	ManagerIds   []string               `protobuf:"bytes,14,rep,name=managerIds,proto3" json:"managerIds,omitempty"`
	Phones       []string               `protobuf:"bytes,15,rep,name=phones,proto3" json:"phones,omitempty"`
	Facebook     string                 `protobuf:"bytes,16,opt,name=facebook,proto3" json:"facebook,omitempty"`
	Twitter      string                 `protobuf:"bytes,17,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Youtube      string                 `protobuf:"bytes,18,opt,name=youtube,proto3" json:"youtube,omitempty"`
	Website      string                 `protobuf:"bytes,19,opt,name=website,proto3" json:"website,omitempty"`
	Emails       []string               `protobuf:"bytes,20,rep,name=emails,proto3" json:"emails,omitempty"`
	Latitude     float64                `protobuf:"fixed64,21,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float64                `protobuf:"fixed64,22,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Addr1        string                 `protobuf:"bytes,23,opt,name=addr1,proto3" json:"addr1,omitempty"`
	Addr2        string                 `protobuf:"bytes,24,opt,name=addr2,proto3" json:"addr2,omitempty"`
	Addr3        string                 `protobuf:"bytes,25,opt,name=addr3,proto3" json:"addr3,omitempty"`
	Village      string                 `protobuf:"bytes,26,opt,name=village,proto3" json:"village,omitempty"`
	Commune      string                 `protobuf:"bytes,27,opt,name=commune,proto3" json:"commune,omitempty"`
	District     string                 `protobuf:"bytes,28,opt,name=district,proto3" json:"district,omitempty"`
	Province     string                 `protobuf:"bytes,29,opt,name=province,proto3" json:"province,omitempty"`
	City         string                 `protobuf:"bytes,30,opt,name=city,proto3" json:"city,omitempty"`
	Postal       string                 `protobuf:"bytes,31,opt,name=postal,proto3" json:"postal,omitempty"`
	Country      string                 `protobuf:"bytes,32,opt,name=country,proto3" json:"country,omitempty"`
	ReviewStatus string                 `protobuf:"bytes,33,opt,name=reviewStatus,proto3" json:"reviewStatus,omitempty"`
	ReviewStars  float32                `protobuf:"fixed32,34,opt,name=reviewStars,proto3" json:"reviewStars,omitempty"`
	ReviewNumb   int32                  `protobuf:"varint,35,opt,name=reviewNumb,proto3" json:"reviewNumb,omitempty"`
	Active       bool                   `protobuf:"varint,36,opt,name=active,proto3" json:"active,omitempty"`
	CreatedBy    string                 `protobuf:"bytes,37,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy    string                 `protobuf:"bytes,38,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,39,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,40,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_business_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_business_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Business) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Business) GetNameKh() string {
	if x != nil {
		return x.NameKh
	}
	return ""
}

func (x *Business) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Business) GetNameXx() string {
	if x != nil {
		return x.NameXx
	}
	return ""
}

func (x *Business) GetDscrtKh() string {
	if x != nil {
		return x.DscrtKh
	}
	return ""
}

func (x *Business) GetDscrtEn() string {
	if x != nil {
		return x.DscrtEn
	}
	return ""
}

func (x *Business) GetDscrtXx() string {
	if x != nil {
		return x.DscrtXx
	}
	return ""
}

func (x *Business) GetOpeningDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpeningDate
	}
	return nil
}

func (x *Business) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Business) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Business) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Business) GetOpeningHours() []*OpeningHour {
	if x != nil {
		return x.OpeningHours
	}
	return nil
}

func (x *Business) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *Business) GetManagerIds() []string {
	if x != nil {
		return x.ManagerIds
	}
	return nil
}

func (x *Business) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *Business) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *Business) GetTwitter() string {
	if x != nil {
		return x.Twitter
	}
	return ""
}

func (x *Business) GetYoutube() string {
	if x != nil {
		return x.Youtube
	}
	return ""
}

func (x *Business) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Business) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *Business) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Business) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Business) GetAddr1() string {
	if x != nil {
		return x.Addr1
	}
	return ""
}

func (x *Business) GetAddr2() string {
	if x != nil {
		return x.Addr2
	}
	return ""
}

func (x *Business) GetAddr3() string {
	if x != nil {
		return x.Addr3
	}
	return ""
}

func (x *Business) GetVillage() string {
	if x != nil {
		return x.Village
	}
	return ""
}

func (x *Business) GetCommune() string {
	if x != nil {
		return x.Commune
	}
	return ""
}

func (x *Business) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Business) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Business) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Business) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *Business) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Business) GetReviewStatus() string {
	if x != nil {
		return x.ReviewStatus
	}
	return ""
}

func (x *Business) GetReviewStars() float32 {
	if x != nil {
		return x.ReviewStars
	}
	return 0
}

func (x *Business) GetReviewNumb() int32 {
	if x != nil {
		return x.ReviewNumb
	}
	return 0
}

func (x *Business) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Business) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Business) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Business) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Business) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_business_entity_proto protoreflect.FileDescriptor

var file_business_entity_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x76, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x09, 0x76, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x09, 0x0a,
	0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d,
	0x65, 0x4b, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x4b,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d,
	0x65, 0x58, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x58,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x73, 0x63, 0x72, 0x74, 0x4b, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x63, 0x72, 0x74, 0x4b, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x73, 0x63, 0x72, 0x74, 0x45, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73,
	0x63, 0x72, 0x74, 0x45, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x73, 0x63, 0x72, 0x74, 0x58, 0x78,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x63, 0x72, 0x74, 0x58, 0x78, 0x12,
	0x3c, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x76, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x76, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x31, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64,
	0x72, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x32, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x33, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x64, 0x64, 0x72, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x72, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6f, 0x68, 0x69, 0x65, 0x6e, 0x67, 0x2f, 0x76, 0x67, 0x6f,
	0x61, 0x70, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_business_entity_proto_rawDescOnce sync.Once
	file_business_entity_proto_rawDescData = file_business_entity_proto_rawDesc
)

func file_business_entity_proto_rawDescGZIP() []byte {
	file_business_entity_proto_rawDescOnce.Do(func() {
		file_business_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_business_entity_proto_rawDescData)
	})
	return file_business_entity_proto_rawDescData
}

var file_business_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_business_entity_proto_goTypes = []interface{}{
	(*Business)(nil),              // 0: vgo.api.Business
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*Image)(nil),                 // 2: vgo.api.Image
	(*OpeningHour)(nil),           // 3: vgo.api.OpeningHour
}
var file_business_entity_proto_depIdxs = []int32{
	1, // 0: vgo.api.Business.openingDate:type_name -> google.protobuf.Timestamp
	2, // 1: vgo.api.Business.images:type_name -> vgo.api.Image
	3, // 2: vgo.api.Business.openingHours:type_name -> vgo.api.OpeningHour
	1, // 3: vgo.api.Business.updatedAt:type_name -> google.protobuf.Timestamp
	1, // 4: vgo.api.Business.createdAt:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_business_entity_proto_init() }
func file_business_entity_proto_init() {
	if File_business_entity_proto != nil {
		return
	}
	file_vos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_business_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_business_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_business_entity_proto_goTypes,
		DependencyIndexes: file_business_entity_proto_depIdxs,
		MessageInfos:      file_business_entity_proto_msgTypes,
	}.Build()
	File_business_entity_proto = out.File
	file_business_entity_proto_rawDesc = nil
	file_business_entity_proto_goTypes = nil
	file_business_entity_proto_depIdxs = nil
}
